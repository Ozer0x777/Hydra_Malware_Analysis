import os
import requests
import json
import csv
from dotenv import load_dotenv
import argparse

load_dotenv()

MALWARE_BAZAR_API_KEY = os.getenv("MALWARE_BAZAR_API_KEY")
VIRUS_TOTAL_API_KEY = os.getenv("VIRUS_TOTAL_API_KEY")
HYBRID_ANALYSIS_API_KEY = os.getenv("HYBRID_ANALYSIS_API_KEY")
JOE_SANDBOX_API_KEY = os.getenv("JOE_SANDBOX_API_KEY")

def submit_file_to_malware_bazar(file_path):
    url = "https://mb-api.abuse.ch/api/v1/submit"
    payload = {"apikey": MALWARE_BAZAR_API_KEY}
    files = {"file": ("file", open(file_path, "rb"))}
    response = requests.post(url, data=payload, files=files)
    return response.json()

def submit_file_to_virus_total(file_path):
    url = "https://www.virustotal.com/vtapi/v2/file/scan"
    params = {"apikey": VIRUS_TOTAL_API_KEY}
    files = {"file": ("file", open(file_path, "rb"))}
    response = requests.post(url, params=params, files=files)
    return response.json()

def submit_file_to_hybrid_analysis(file_path):
    url = "https://www.hybrid-analysis.com/api/v2/submit/file"
    headers = {"user-agent": "Fiddler", "api-key": HYBRID_ANALYSIS_API_KEY}
    files = {"file": ("file", open(file_path, "rb"))}
    response = requests.post(url, headers=headers, files=files)
    return response.json()

def submit_file_to_joe_sandbox(file_path):
    url = "https://www.joesandbox.com/api/submit/file"
    payload = {"apikey": JOE_SANDBOX_API_KEY}
    files = {"file": ("file", open(file_path, "rb"))}
    response = requests.post(url, data=payload, files=files)
    return response.json()

def submit_files_to_apis(file_paths):
    malware_bazar_results = []
    virus_total_results = []
    hybrid_analysis_results = []
    joe_sandbox_results = []

    for file_path in file_paths:
        print(f"Submitting file {file_path}")
        malware_bazar_results.append(submit_file_to_malware_bazar(file_path))
        virus_total_results.append(submit_file_to_virus_total(file_path))
        hybrid_analysis_results.append(submit_file_to_hybrid_analysis(file_path))
        joe_sandbox_results.append(submit_file_to_joe_sandbox(file_path))

    return {
        "Malware Bazar": malware_bazar_results,
        "Virus Total": virus_total_results,
        "Hybrid Analysis": hybrid_analysis_results,
        "Joe Sandbox": joe_sandbox_results,
    }

def write_results_to_csv(file_path, results):
    with open(file_path, "w", newline="") as f:
        writer = csv.writer(f)
        writer.writerow(["API", "File", "Result"])
        for api, api_results in results.items():
            for i, result in enumerate(api_results):
                writer.writerow([api, f"File {i+1}", json.dumps(result)])

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Submit files to multiple malware analysis services.')
    parser.add_argument('file_paths', metavar='file_paths', type=str, nargs='+',
                    help='Paths to files to submit')

    args = parser.parse_args()
    results = submit_files_to_apis(args.file_paths)

    write_results_to_csv("results.csv", results)